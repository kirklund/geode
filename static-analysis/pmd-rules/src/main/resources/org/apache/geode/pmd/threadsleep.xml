<?xml version="1.0"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more contributor license
  ~ agreements. See the NOTICE file distributed with this work for additional information regarding
  ~ copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance with the License. You may obtain a
  ~ copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied. See the License for the specific language governing permissions and limitations under
  ~ the License.
  -->
<ruleset name="Avoid Thread Sleep Rule"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        Reports violations of tests using Thread.sleep.
    </description>
    <rule name="AvoidThreadSleepRule"
          message="Tests should use GeodeAwaitility or similar awaiting instead of Thread.sleep."
          language="java"
          class="org.apache.geode.pmd.AvoidThreadSleepRule">
        <description>
            Geode does not unconditionally allow Thread.sleep statements within test code.

            If the use of Thread.sleep is necessary within a callback to simulate slow processing,
            you can annotate the containing method with @AllowThreadSleep. If the test code is old,
            then annotate the containing method with @RemoveThreadSleep to indicate that we intend
            to replace it with GeodeAwaitility. Either annotation will cause it to be ignored by
            this rule.
        </description>
        <priority>3</priority>
        <example>
            <![CDATA[
              public class SomeClass {

                public void someMethod() {
                  // Use of thread sleep to wait for asynchronous activity is a source of test
                  // flakiness
                  Thread.sleep(2000);
                }
              }
			]]>
        </example>
    </rule>
</ruleset>
